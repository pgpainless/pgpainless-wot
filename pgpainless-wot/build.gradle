// SPDX-FileCopyrightText: 2021 Paul Schaub <vanitasvitae@fsfe.org>
//
// SPDX-License-Identifier: Apache-2.0

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'java-library'
    id 'java-test-fixtures'
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
}

group 'org.pgpainless'

repositories {
    mavenCentral()
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    // JUnit
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlinVersion"

    testFixturesImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testFixturesImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testFixturesRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testFixturesApi("org.pgpainless:pgpainless-core:$pgpainlessVersion")

    // Logging
    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"

    // Certificate store
    api "org.pgpainless:pgp-certificate-store:$certDJavaVersion"
    api ("org.pgpainless:pgpainless-cert-d:$pgpainlessCertDVersion") {
        exclude(group: "org.pgpainless", module: "pgpainless-core")
    }

    api("org.pgpainless:pgpainless-core:$pgpainlessVersion")
    api(project(":wot-dijkstra"))
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact testsJar
            pom {
                name = 'PGPainless-WOT'
                description = 'Web of Trust Implementation using PGPainless'
                url = 'https://github.com/pgpainless/pgpainless-wot'
                inceptionYear = '2022'

                scm {
                    url = 'https://github.com/pgpainless/pgpainless-wot'
                    connection = 'scm:https://github.com/pgpainless/pgpainless-wot'
                    developerConnection = 'scm:git://github.com/pgpainless/pgpainless-wot.git'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'vanitasvitae'
                        name = 'Paul Schaub'
                        email = 'vanitasvitae@fsfe.org'
                    }
                    developer {
                        id = 'hkos'
                        name = 'Heiko Sch√§fer'
                        email = 'heiko@schaefer.name'
                    }
                }
            }
        }
    }
    repositories {
        if (sonatypeCredentialsAvailable) {
            maven {
                url isSnapshot ? sonatypeSnapshotUrl : sonatypeStagingUrl
                credentials {
                    username = sonatypeUsername
                    password = sonatypePassword
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    required { signingRequired }
    sign publishing.publications.mavenJava
}

test {
    useJUnitPlatform()
}
